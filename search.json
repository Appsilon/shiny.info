[{"path":"https://appsilon.github.io/shiny.info/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Paweł Przytuła. Author. Dominik Krzemiński. Author. Jakub Nowicki. Author, maintainer. Appsilon Sp. z o.o.. Copyright holder.","code":""},{"path":"https://appsilon.github.io/shiny.info/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Przytuła P, Krzemiński D, Nowicki J (2023). shiny.info: 'shiny' Info. R package version 0.2.0.9000.","code":"@Manual{,   title = {shiny.info: 'shiny' Info},   author = {Paweł Przytuła and Dominik Krzemiński and Jakub Nowicki},   year = {2023},   note = {R package version 0.2.0.9000}, }"},{"path":"https://appsilon.github.io/shiny.info/index.html","id":"shinyinfo-","dir":"","previous_headings":"","what":"shiny Info","title":"shiny Info","text":"Display simple information shiny project user interface app. can install shiny.info CRAN repository: can get recent version repo using remotes.","code":"install.packages(\"shiny.info\") remotes::install_github(\"Appsilon/shiny.info\")"},{"path":"https://appsilon.github.io/shiny.info/index.html","id":"how-to-use-shinyinfo","dir":"","previous_headings":"","what":"How to use shiny.info?","title":"shiny Info","text":"Just add one shiny.info functions UI app (features require also adding little bit code server function). Check features section documentation details. example shiny app uses shiny.info can found ./examples directory.","code":""},{"path":"https://appsilon.github.io/shiny.info/index.html","id":"basic-features","dir":"","previous_headings":"","what":"Basic features","title":"shiny Info","text":"display simple text message:  show information git branch, commit changes:  add “powered ” information link:  show app version:  show busy spinner app calculating:  group multiple messages one panel:","code":"shiny.info::display(\"Hello user!\", position = \"top right\") shiny.info::git_info() shiny.info::powered_by(\"Appsilon\", link = \"appsilon.com\") # global variable: VERSION <- \"1.2.2\"  # in app ui shiny.info::version() shiny.info::busy() shiny.info::info_panel(     shiny.info::git_info(),     shiny.info::powered_by(\"Appsilon\", link = \"appsilon.com\"),     position = \"bottom left\" )"},{"path":"https://appsilon.github.io/shiny.info/index.html","id":"advanced-features","dir":"","previous_headings":"","what":"Advanced features","title":"shiny Info","text":"render value (eg. input, reactive value) server:  render information session:  debug app using browser() function just clicking button:  toggle display key shortcut:  show custom message using global variables:  show custom message using reactive variables:","code":"# in app ui shiny.info::info_value(\"test_info_value\")  # in app server some_value <- reactiveVal(\"a test value to display\") output$test_info_value <- shiny.info::render_info_value(some_value()) # in app ui shiny.info::info_value(\"session_info_value\")  # in app server output$session_info_value <- shiny.info::render_session_info() # in app ui shiny.info::inspect_btn_ui()  # in app server shiny.info::inspect_btn_server(input) shiny.info::toggle_info(\"Ctrl+Shift+K\") # in app global VERSION = \"1.2.2\" REPO = git2r::repository_head(repository(\".\"))[[1]] GIT_COMMIT_MESSAGE = git2r::commits(repository(\".\"))[[1]]$message GIT_COMMIT_HASH = git2r::commits(repository(\".\"))[[1]]$sha  # in app ui shiny.info::display(     message = glue(\"I am running on repository {REPO}     from [{GIT_COMMIT_HASH}]: {GIT_COMMIT_MESSAGE},     and this is version: {VERSION}\"),     position = \"top right\",     type = \"custom_message\" ) # in app ui shiny.info::info_value(\"test_info_value\", position = \"top right\")  # in app server a <- reactive({   input$xcol   rnorm(1,1) })  output$test_info_value <- shiny.info::render_info_value(   glue(\"a: {a()}, X Variable: {input$xcol}\"),   add_name = FALSE )"},{"path":"https://appsilon.github.io/shiny.info/index.html","id":"how-can-i-contribute","dir":"","previous_headings":"","what":"How can I contribute?","title":"shiny Info","text":"want contribute project please submit regular PR ’re done new feature bug fix.","code":""},{"path":"https://appsilon.github.io/shiny.info/index.html","id":"appsilon","dir":"","previous_headings":"","what":"Appsilon","title":"shiny Info","text":"Appsilon Posit (formerly RStudio) Full Service Certified Partner. Learn appsilon.com. Get touch opensource@appsilon.com Explore Rhinoverse - family R packages built around Rhino!","code":""},{"path":"https://appsilon.github.io/shiny.info/reference/busy.html","id":null,"dir":"Reference","previous_headings":"","what":"Busy or not — busy","title":"Busy or not — busy","text":"Displays spinner indicating calculations running server side.","code":""},{"path":"https://appsilon.github.io/shiny.info/reference/busy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Busy or not — busy","text":"","code":"busy(loader = \"dots\", position = \"top right\")"},{"path":"https://appsilon.github.io/shiny.info/reference/busy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Busy or not — busy","text":"loader character list. character given, selects one available loaders (look Details ). using list can create custom loder. List needs structure loader <- list(css<-\"CSS CODE\", html <- div(\"CODE DISPLAY\")). position character position parameter. Default \"top right\".","code":""},{"path":"https://appsilon.github.io/shiny.info/reference/busy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Busy or not — busy","text":"shiny tag List js script, style spinner display div","code":""},{"path":"https://appsilon.github.io/shiny.info/reference/busy.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Busy or not — busy","text":"Currently available loaders: \"dots\", \"spinner\". Solution inspired : https://colinfay./watch-r-shiny/.","code":""},{"path":"https://appsilon.github.io/shiny.info/reference/display.html","id":null,"dir":"Reference","previous_headings":"","what":"Display message on the top-right corner — display","title":"Display message on the top-right corner — display","text":"Display message top-right corner","code":""},{"path":"https://appsilon.github.io/shiny.info/reference/display.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display message on the top-right corner — display","text":"","code":"display(message, position = \"top right\", type = \"message\")"},{"path":"https://appsilon.github.io/shiny.info/reference/display.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Display message on the top-right corner — display","text":"message character message want position character position parameter. Default \"top right\". type character display type specify id. Default \"message\"","code":""},{"path":"https://appsilon.github.io/shiny.info/reference/display.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Display message on the top-right corner — display","text":"div wraps message display position corner shiny app.","code":""},{"path":"https://appsilon.github.io/shiny.info/reference/dot-key_condition.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a JS condition for a key — .key_condition","title":"Create a JS condition for a key — .key_condition","text":"Create JS condition key","code":""},{"path":"https://appsilon.github.io/shiny.info/reference/dot-key_condition.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a JS condition for a key — .key_condition","text":"","code":".key_condition(key, to_lower = TRUE)"},{"path":"https://appsilon.github.io/shiny.info/reference/dot-key_condition.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a JS condition for a key — .key_condition","text":"key key convert condition to_lower key converted lowercase. Default TRUE","code":""},{"path":"https://appsilon.github.io/shiny.info/reference/dot-key_condition.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a JS condition for a key — .key_condition","text":"JS condition checking shortcut","code":""},{"path":"https://appsilon.github.io/shiny.info/reference/dot-loader_dots.html","id":null,"dir":"Reference","previous_headings":"","what":"CSS/HTML code for a dots loader — .loader_dots","title":"CSS/HTML code for a dots loader — .loader_dots","text":"CSS/HTML code dots loader","code":""},{"path":"https://appsilon.github.io/shiny.info/reference/dot-loader_dots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CSS/HTML code for a dots loader — .loader_dots","text":"","code":".loader_dots"},{"path":"https://appsilon.github.io/shiny.info/reference/dot-loader_dots.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"CSS/HTML code for a dots loader — .loader_dots","text":"object class list length 2.","code":""},{"path":"https://appsilon.github.io/shiny.info/reference/dot-loader_spinner.html","id":null,"dir":"Reference","previous_headings":"","what":"CSS/HTML code for a spinner loader — .loader_spinner","title":"CSS/HTML code for a spinner loader — .loader_spinner","text":"CSS/HTML code spinner loader","code":""},{"path":"https://appsilon.github.io/shiny.info/reference/dot-loader_spinner.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CSS/HTML code for a spinner loader — .loader_spinner","text":"","code":".loader_spinner"},{"path":"https://appsilon.github.io/shiny.info/reference/dot-loader_spinner.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"CSS/HTML code for a spinner loader — .loader_spinner","text":"object class list length 2.","code":""},{"path":"https://appsilon.github.io/shiny.info/reference/dot-shortcut_condition.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a JS condition for a shortcut — .shortcut_condition","title":"Create a JS condition for a shortcut — .shortcut_condition","text":"Create JS condition shortcut","code":""},{"path":"https://appsilon.github.io/shiny.info/reference/dot-shortcut_condition.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a JS condition for a shortcut — .shortcut_condition","text":"","code":".shortcut_condition(shortcut)"},{"path":"https://appsilon.github.io/shiny.info/reference/dot-shortcut_condition.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a JS condition for a shortcut — .shortcut_condition","text":"shortcut keys checked. Shortcut can include special keys: Ctrl, Alt, Shift. Keys separated '+' sign. Default Ctrl+Shift+K","code":""},{"path":"https://appsilon.github.io/shiny.info/reference/dot-shortcut_condition.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a JS condition for a shortcut — .shortcut_condition","text":"JS condition checking shortcut","code":""},{"path":"https://appsilon.github.io/shiny.info/reference/get_args.html","id":null,"dir":"Reference","previous_headings":"","what":"Auxiliary function that returns list of arguments for parent calling function — get_args","title":"Auxiliary function that returns list of arguments for parent calling function — get_args","text":"Auxiliary function returns list arguments parent calling function","code":""},{"path":"https://appsilon.github.io/shiny.info/reference/get_args.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Auxiliary function that returns list of arguments for parent calling function — get_args","text":"","code":"get_args(fun, depth = -9)"},{"path":"https://appsilon.github.io/shiny.info/reference/get_args.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Auxiliary function that returns list of arguments for parent calling function — get_args","text":"fun string; function look depth negative numeric; layers check arguments","code":""},{"path":"https://appsilon.github.io/shiny.info/reference/get_args.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Auxiliary function that returns list of arguments for parent calling function — get_args","text":"list function arguments","code":""},{"path":"https://appsilon.github.io/shiny.info/reference/git_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Git information — git_info","title":"Git information — git_info","text":"Displays git information repository current working space.","code":""},{"path":"https://appsilon.github.io/shiny.info/reference/git_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Git information — git_info","text":"","code":"git_info(position = \"top right\")"},{"path":"https://appsilon.github.io/shiny.info/reference/git_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Git information — git_info","text":"position character position parameter. Default \"top right\".","code":""},{"path":"https://appsilon.github.io/shiny.info/reference/infoPanel.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrapper for info_panel function — infoPanel","title":"Wrapper for info_panel function — infoPanel","text":"Wrapper info_panel function","code":""},{"path":"https://appsilon.github.io/shiny.info/reference/infoPanel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrapper for info_panel function — infoPanel","text":"","code":"infoPanel(..., position = \"top right\")"},{"path":"https://appsilon.github.io/shiny.info/reference/infoPanel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrapper for info_panel function — infoPanel","text":"... calls info elements position character position parameter. Default \"top right\".","code":""},{"path":"https://appsilon.github.io/shiny.info/reference/infoPanel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrapper for info_panel function — infoPanel","text":"div wraps info boxes display position corner shiny app.","code":""},{"path":"https://appsilon.github.io/shiny.info/reference/info_panel.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a panel for all info boxes so they do not overlap — info_panel","title":"Creates a panel for all info boxes so they do not overlap — info_panel","text":"Creates panel info boxes overlap","code":""},{"path":"https://appsilon.github.io/shiny.info/reference/info_panel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a panel for all info boxes so they do not overlap — info_panel","text":"","code":"info_panel(..., position = \"top right\")"},{"path":"https://appsilon.github.io/shiny.info/reference/info_panel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a panel for all info boxes so they do not overlap — info_panel","text":"... calls info elements position character position parameter. Default \"top right\".","code":""},{"path":"https://appsilon.github.io/shiny.info/reference/info_panel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates a panel for all info boxes so they do not overlap — info_panel","text":"div wraps info boxes display position corner shiny app.","code":""},{"path":"https://appsilon.github.io/shiny.info/reference/info_value.html","id":null,"dir":"Reference","previous_headings":"","what":"UI output for info value — info_value","title":"UI output for info value — info_value","text":"UI output info value","code":""},{"path":"https://appsilon.github.io/shiny.info/reference/info_value.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"UI output for info value — info_value","text":"","code":"info_value(id, position = \"top right\")"},{"path":"https://appsilon.github.io/shiny.info/reference/info_value.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"UI output for info value — info_value","text":"id output id render position character position parameter. Default \"top right\".","code":""},{"path":"https://appsilon.github.io/shiny.info/reference/info_value.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"UI output for info value — info_value","text":"div wraps rendered value display position corner shiny app.","code":""},{"path":"https://appsilon.github.io/shiny.info/reference/inspect_btn_server.html","id":null,"dir":"Reference","previous_headings":"","what":"Inspect button server — inspect_btn_server","title":"Inspect button server — inspect_btn_server","text":"Helps easlily stop app moment debugging checking state.","code":""},{"path":"https://appsilon.github.io/shiny.info/reference/inspect_btn_server.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Inspect button server — inspect_btn_server","text":"","code":"inspect_btn_server(input)"},{"path":"https://appsilon.github.io/shiny.info/reference/inspect_btn_server.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Inspect button server — inspect_btn_server","text":"input Shiny server input.","code":""},{"path":"https://appsilon.github.io/shiny.info/reference/inspect_btn_server.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Inspect button server — inspect_btn_server","text":"observeEvent Inspect button","code":""},{"path":"https://appsilon.github.io/shiny.info/reference/inspect_btn_ui.html","id":null,"dir":"Reference","previous_headings":"","what":"Inspect button UI — inspect_btn_ui","title":"Inspect button UI — inspect_btn_ui","text":"Helps easlily stop app moment debugging checking state.","code":""},{"path":"https://appsilon.github.io/shiny.info/reference/inspect_btn_ui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Inspect button UI — inspect_btn_ui","text":"","code":"inspect_btn_ui(label = \"Inspect\", position = \"top right\")"},{"path":"https://appsilon.github.io/shiny.info/reference/inspect_btn_ui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Inspect button UI — inspect_btn_ui","text":"label label debug button. Default \"Inspect\" position character position parameter. Default \"top right\".","code":""},{"path":"https://appsilon.github.io/shiny.info/reference/inspect_btn_ui.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Inspect button UI — inspect_btn_ui","text":"div \"shinyinfo_inspect_btn\".","code":""},{"path":"https://appsilon.github.io/shiny.info/reference/powered_by.html","id":null,"dir":"Reference","previous_headings":"","what":"Powered by — powered_by","title":"Powered by — powered_by","text":"Displays information authors shiny app.","code":""},{"path":"https://appsilon.github.io/shiny.info/reference/powered_by.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Powered by — powered_by","text":"","code":"powered_by(   company_name = NULL,   link = \"#\",   position = \"top right\",   logo = NULL,   logo_width = \"120px\",   logo_height = \"auto\",   inline = FALSE )"},{"path":"https://appsilon.github.io/shiny.info/reference/powered_by.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Powered by — powered_by","text":"company_name character creator app link link creator's website position character position parameter. Default \"top right\". logo web link logo image name image file ./www logo_width width logo pixels logo_height height logo pixels inline TRUE, display text logo line","code":""},{"path":"https://appsilon.github.io/shiny.info/reference/powered_by.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Powered by — powered_by","text":"div \"powered \".","code":""},{"path":"https://appsilon.github.io/shiny.info/reference/render_info_value.html","id":null,"dir":"Reference","previous_headings":"","what":"Server render function for info value — render_info_value","title":"Server render function for info value — render_info_value","text":"Server render function info value","code":""},{"path":"https://appsilon.github.io/shiny.info/reference/render_info_value.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Server render function for info value — render_info_value","text":"","code":"render_info_value(   expr,   env = parent.frame(),   quoted = FALSE,   sep = \" \",   add_name = TRUE )"},{"path":"https://appsilon.github.io/shiny.info/reference/render_info_value.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Server render function for info value — render_info_value","text":"expr value render env environment evaluate expr. Default parent.frame() quoted expr quoted expression (quote())? useful want save expression variable. Default FALSE sep separator passed cat appended element. add_name expression name added. Default TRUE","code":""},{"path":"https://appsilon.github.io/shiny.info/reference/render_info_value.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Server render function for info value — render_info_value","text":"Shiny render function saved element output.","code":""},{"path":"https://appsilon.github.io/shiny.info/reference/render_info_value.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Server render function for info value — render_info_value","text":"want use toggle_info(),  add outputOptions(output, [info value id], suspendWhenHidden = FALSE) force  rendering value hidden.","code":""},{"path":"https://appsilon.github.io/shiny.info/reference/render_info_value.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Server render function for info value — render_info_value","text":"","code":"if(interactive()) { library(shiny) library(shiny.info)  ui <- fluidPage(   info_value(\"value_to_display\") )  server <- function(input, output, session) {   test_reactive <- reactiveVal(\"some value\")   output$value_to_display <- render_info_value(expr = test_reactive())   # next line is required to work with toggle_info()   outputOptions(output, \"value_to_display\", suspendWhenHidden = FALSE) } }"},{"path":"https://appsilon.github.io/shiny.info/reference/render_session_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Server render function for rendering informations about user session (app URL, username and pixel ratio) — render_session_info","title":"Server render function for rendering informations about user session (app URL, username and pixel ratio) — render_session_info","text":"Server render function rendering informations user session (app URL, username pixel ratio)","code":""},{"path":"https://appsilon.github.io/shiny.info/reference/render_session_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Server render function for rendering informations about user session (app URL, username and pixel ratio) — render_session_info","text":"","code":"render_session_info()"},{"path":"https://appsilon.github.io/shiny.info/reference/render_session_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Server render function for rendering informations about user session (app URL, username and pixel ratio) — render_session_info","text":"Shiny render function saved element output.","code":""},{"path":"https://appsilon.github.io/shiny.info/reference/render_session_info.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Server render function for rendering informations about user session (app URL, username and pixel ratio) — render_session_info","text":"Use info_value UI function. want use toggle_info(),  add outputOptions(output, [session info id], suspendWhenHidden = FALSE) force  rendering value hidden.","code":""},{"path":"https://appsilon.github.io/shiny.info/reference/render_session_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Server render function for rendering informations about user session (app URL, username and pixel ratio) — render_session_info","text":"","code":"if(interactive()) { library(shiny) library(shiny.info)  ui <- fluidPage(    info_value(\"session_info\") )  server <- function(input, output, session) {   outputsession_info <- render_session_info()   # next line is required to work with toggle_info()   outputOptions(output, \"session_info\", suspendWhenHidden = FALSE) } }"},{"path":"https://appsilon.github.io/shiny.info/reference/toggle_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Toggle showing info with keyboard shortcut — toggle_info","title":"Toggle showing info with keyboard shortcut — toggle_info","text":"Toggle showing info keyboard shortcut","code":""},{"path":"https://appsilon.github.io/shiny.info/reference/toggle_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Toggle showing info with keyboard shortcut — toggle_info","text":"","code":"toggle_info(shortcut = \"Ctrl+Shift+K\", hidden_on_start = TRUE)"},{"path":"https://appsilon.github.io/shiny.info/reference/toggle_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Toggle showing info with keyboard shortcut — toggle_info","text":"shortcut keys trigger showing info. Shortcut can include special keys: Ctrl, Alt, Shift. Keys separated '+' sign. Default Ctrl+Shift+K hidden_on_start info panels hidden start application? Default TRUE.","code":""},{"path":"https://appsilon.github.io/shiny.info/reference/toggle_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Toggle showing info with keyboard shortcut — toggle_info","text":"JS script adds toggle functionality.","code":""},{"path":"https://appsilon.github.io/shiny.info/reference/toggle_info.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Toggle showing info with keyboard shortcut — toggle_info","text":"toggle_info() added header application ui.R,  since adds script toggle functionality. want use info_value,  add outputOptions(output, [info value id], suspendWhenHidden = FALSE) force  rendering value hidden.","code":""},{"path":"https://appsilon.github.io/shiny.info/reference/toggle_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Toggle showing info with keyboard shortcut — toggle_info","text":"","code":"if (interactive()) { library(shiny) library(shiny.info)  ui <- fluidPage(   toggle_info(),   shiny.info::display(\"test message\"),   shiny.info::info_value(\"test_input_value\", \"bottom right\"),   textInput(inputId = \"test_input\", label = NULL) )  server <- function(input, output, session) {   output$test_input_value <- shiny.info::render_info_value(input$test_input)   outputOptions(output, \"test_input_value\", suspendWhenHidden = FALSE) }  shinyApp(ui = ui, server = server) }"},{"path":"https://appsilon.github.io/shiny.info/reference/version.html","id":null,"dir":"Reference","previous_headings":"","what":"Display version of the app — version","title":"Display version of the app — version","text":"Displays version app default using VERSION global variable.","code":""},{"path":"https://appsilon.github.io/shiny.info/reference/version.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display version of the app — version","text":"","code":"version(ver = NULL, position = \"top right\")"},{"path":"https://appsilon.github.io/shiny.info/reference/version.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Display version of the app — version","text":"ver (default NULL) custom version number position character position parameter. Default \"top right\".","code":""},{"path":"https://appsilon.github.io/shiny.info/reference/version.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Display version of the app — version","text":"","code":"version() # if VERSION global variable exists #> <div id=\"shinyinfo_version\" class=\"info_box\"><\/div> version(\"1.2.1\") # with custom version number #> <div id=\"shinyinfo_version\" class=\"info_box\">1.2.1<\/div>"}]
